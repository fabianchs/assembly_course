     1                                  ;kicking.asm
     2                                  
     3                                  section .data 
     4 00000000 48656C6C6F20776F72-         msg1 db "Hello world", 10,0 ;string with NL and zero
     4 00000009 6C640A00           
     5                                      msg1Len equ $-msg1-1  ;measuring the length of msg1, minus the 0
     6 0000000D 4B69636B696E672061-         msg2 db "Kicking and alive!", 10,0 ;10 for NL and cero, for finishing the text
     6 00000016 6E6420616C69766521-
     6 0000001F 0A00               
     7                                      msg2Len equ $-msg2-1 ;measure the len of msg2, minus the 0
     8 00000021 6501000000000000            radius dq 357 ; no string, not displayable
     9 00000029 1F85EB51B81E0940            pi dq 3.14 ;no string, not displayable
    10                                  
    11                                  section .bss
    12                                  
    13                                  section .text
    14                                      global main
    15                                  
    16                                  main: 
    17 00000000 55                          push rbp ;function prologue
    18 00000001 4889E5                      mov rbp, rsp ; function prologue
    19 00000004 B801000000                  mov rax, 1  ; 1=write
    20 00000009 BF01000000                  mov rdi, 1 ;1= write on console to stdout
    21 0000000E 48BE-                       mov rsi, msg1 ;string to display
    21 00000010 [0000000000000000] 
    22 00000018 BA0C000000                  mov rdx, msg1Len ;length of the string
    23 0000001D 0F05                        syscall ;display the screen
    24 0000001F B801000000                  mov rax, 1 ;1 write
    25 00000024 BF01000000                  mov rdi, 1 ;to stdout
    26 00000029 48BE-                       mov rsi, msg2 ;string to display
    26 0000002B [0D00000000000000] 
    27 00000033 BA13000000                  mov rdx, msg2Len ;length of the string
    28 00000038 0F05                        syscall     ;display the second string
    29 0000003A 4889EC                      mov rsp, rbp ;function epilogue
    30 0000003D 5D                          pop rbp     ;function epilogue
    31 0000003E B83C000000                  mov rax, 60 ; 60=exit
    32 00000043 BA00000000                  mov rdx, 0 ;0=succcess exit code
    33 00000048 0F05                        syscall
